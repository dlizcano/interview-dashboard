"Ranger Safety Protec"
)
# change names
names(scores_Rel_females) <- Skills_short
#make factors =3
for(y in 1:11){
scores_Rel_females[,y] <-  factor(scores_Rel_females[,y],
levels=c("-1","0", "1"))
}
# Build plot
p <- likert(scores_Rel_females)
plot(p,  centered = TRUE, wrap = 50, wrap.grouping = 50, plot.percent.low = FALSE, plot.percent.high = FALSE, plot.percent.neutral = FALSE, panel.arrange = "v", colors=c('orange','khaki', "tomato"))
# Chunk 13
#| title: Competence for Men
ld_m <- ld |> filter(Genero=="Masculino") |> f.assesment()
scores_Compet_males  <- as.data.frame(ld_m[,c(2,4,6,8,10,12,14,16,18,20,22)]) |>
mutate_all( factor)
Skills_short <- c(
"Leader, Manag",
"Self-Motiv",
"Prob-Solv, Deci-Mak",
"Organizat Manag",
"Emo Intellig",
"Comm Rights and Comm",
"Comm Inf and Ideas" ,
"Negot and Resol Confl" ,
"Desc Nat and Cult Val",
"Strat and Threat Mangmt",
"Ranger Safety Protec"
)
# change names
names(scores_Compet_males) <- Skills_short
# Build plot
p <- likert(scores_Compet_males)
plot(p,  centered = TRUE, wrap = 50, wrap.grouping = 50, plot.percent.low = FALSE, plot.percent.high = FALSE, panel.arrange = "v")
# |>
#   count(score_Relev_1, score_Compet_1) |>
#   ggplot(aes(x = n, y = fct_rev(score_Relev_1), fill = score_Compet_1)) +
#   geom_col(position = "fill", color = "white") +
#   scale_fill_manual(
#     values = c("#ae8b2d", "#0e2635", "#873e23", "#abdbe3"),
#     guide = guide_legend(reverse = TRUE)
#   ) +
#   scale_x_continuous(labels = label_percent()) +
#   labs(y = NULL, x = NULL, fill = "Skill competence\nfor my role")
# Chunk 14
#| title: Competence for Women
ld_f <- ld |> filter(Genero=="Femenino") |> f.assesment()
scores_Compet_females  <- as.data.frame(ld_f[,c(2,4,6,8,10,12,14,16,18,20,22)])
#make factors =4
for(y in 1:11){
scores_Compet_females[,y] <- factor(scores_Compet_females[,y],
levels=c("1","2", "3", "4"))
}
# change names
names(scores_Compet_females) <- Skills_short
# Build plot
p <- likert(scores_Compet_females)
plot(p,  centered = TRUE, wrap = 50, wrap.grouping = 50, plot.percent.low = FALSE, plot.percent.high = FALSE, panel.arrange = "v")
# ld_old |>
#   count(maternal_age, delivery_method) |>
#   ggplot(aes(x = n, y = fct_rev(maternal_age), fill = delivery_method)) +
#   geom_col(position = "fill", color = "white") +
#   scale_fill_manual(
#     values = c("#ae8b2d", "#0e2635"),
#     guide = guide_legend(reverse = TRUE)
#   ) +
#   scale_x_continuous(labels = label_percent()) +
#   labs(y = NULL, x = NULL)#, fill = "Delivery\nmethod")
#
# ld |> filter(Genero=="Femenino") |>
#   count(Relevance_skill_1, Competence_skill_1) |>
#   ggplot(aes(x = n, y = fct_rev(Relevance_skill_1), fill = Competence_skill_1)) +
#   geom_col(position = "fill", color = "white") +
#   scale_fill_manual(
#     values = c("#ae8b2d", "#0e2635", "#873e23", "#abdbe3"),
#     guide = guide_legend(reverse = TRUE)
#   ) +
#   scale_x_continuous(labels = label_percent()) +
#   labs(y = NULL, x = NULL, fill = "Skill competence\nfor my role")
# Chunk 15: all-values
#| label: all-values
#| results: hide
ranger <- ld |> filter(Ranger=="yes")
n_respondants <- nrow(ranger)
n_Genero <- ranger |>
count(Genero)
males <- n_Genero[2,2]
females <- n_Genero[1,2]
total <- sum(n_Genero$n)
# p_cesarean_color <- case_when(
#   between(p_cesarean, params$us_cesarean_rate, params$us_cesarean_rate + params$threshold_diff) ~ "warning",
#   p_cesarean > params$us_cesarean_rate + params$threshold_diff ~ "danger",
#   .default = "light"
#   )
#
# p_preterm <- ld |>
#   count(term) |>
#   mutate(p = n / sum(n)) |>
#   filter(term == "Pre-term") |>
#   pull(p)
#
# p_preterm_color <- case_when(
#   between(p_preterm, params$us_preterm_rate, params$us_preterm_rate + params$threshold_diff) ~ "warning",
#   p_preterm > params$us_preterm_rate + params$threshold_diff ~ "danger",
#   .default = "light"
#   )
# Chunk 16
#| content: valuebox
#| title: "Total respondant"
list(
#icon = "person-bounding-box",
color = "primary",
value = total
)
# Chunk 17
#| content: valuebox
#| title: "Man"
list(
#icon = "gender-male",
color =  "warning", # p_cesarean_color,
value = label_percent(accuracy = 1)(males$n/total)
)
# Chunk 18
#| content: valuebox
#| title: "Woman"
list(
#icon = "gender-female",
color = "warning", #p_preterm_color,
value = label_percent(accuracy = 1)(females$n/total)
)
#| title: Ages and Gender
mean_age <- ranger |>
#mutate() |>
group_by(Genero) |>
summarise(avg = mean(Age, na.rm = TRUE))
ranger |> group_by(Genero) |>
#count(Edad) |>
#mutate(p = n / sum(n)) |>
ggplot( aes(x=Age, fill=Genero)) +
geom_histogram( alpha=0.7, position = 'identity', binwidth=1) +
# geom_density() +
# scale_fill_manual(values=c("#69b3a2", "#404080")) +
labs(x = NULL) +
labs(fill = "Gender") +
scale_fill_hue(labels = c("Women", "Men")) +
geom_vline(xintercept = mean_age$avg, linetype="dotted",
color = c("red", "blue" ), size=1.5)# +
#| title: Relevance for Men
ld_m <- ranger |> filter(Genero=="Masculino") |> f.assesment()
View(assesment)
#| title: Assesment of Skills
# ld |> count(Pais) |>
#   mutate(prop = n / sum(n) *100) |>
#   mutate(ypos = cumsum(prop)- 0.6*prop ) |>
#
#   ggplot(aes(x="", y=prop, fill=Pais)) +
#   geom_bar(stat="identity", width=1, color="white") +
#   coord_polar("y", start=0) +
#   theme_void() # remove background, grid, numeric labels
#
###############
# Counts
###############
category_relevance <- as.data.frame(unique(factor(ranger$Relevance_skill_1)))
category_relevance$score <- c(1,0,-1)
category_competence <- as.data.frame(unique(factor(ranger$Competence_skill_1)))
category_competence$score <- c(3,2,1,4)
assesment <- matrix(nrow = 11, ncol = 2) # two colums
#### LOOP
for(i in 1:11){
# Relevance_skill_1
names(category_relevance) <- c(paste("Relevance_skill_",i, sep=""),
paste("score_Relev_",i, sep=""))
# Competence_skill_1
names(category_competence) <- c(paste("Competence_skill_",i, sep=""),
paste("score_Compet_",i, sep=""))
# fix -1
ld_score <- ranger %>%
left_join(category_relevance) |> left_join(category_competence)
ind <- which(is.na(ld_score[,42]))
b <- as.vector(ld_score[,42])
ld_score[,42] <- as.numeric(b[[1]])
ld_score[ind,42] <- -1
d <- as.vector(ld_score[,43])
ld_score[,43] <- as.numeric(d[[1]])
assesment[i,] <- c(
round(sum(ld_score[,42])/dim(ld_score[,38])[1], digits=3),
round(sum(ld_score[,43])/dim(ld_score[,38])[1], digits=3)
)
}
assesment <- as.data.frame(assesment)
names(assesment) <- c("Relevance", "Competence")
Skills <- c(
"Leadership and Management",
"Self-Motivation",
"Problem-Solving and Decision-Making",
"Organizational Management",
"Emotional Intelligence",
"Community Rights and Communication",
"Communication of Information and Ideas" ,
"Negotiation and Resolution of Interpersonal Conflicts" ,
"Description of Natural and Cultural Values in Protected Areas",
"Strategy and Threat Management in Protected Areas",
"Ranger Safety and Protection"
)
assesment$Skills <- as.vector(Skills)
Assesment_Ranger <- assesment |>
arrange(desc(Relevance)) |>
kbl() |>
kable_paper(full_width = T) |>
kable_styling(font_size = 7, "condensed") |>
row_spec(c(1,10), bold = T) |> #, color = "white", background = "gray75")
column_spec(1, color = "white",
background = spec_color(assesment$Relevance[1:11],
end = 0.9,
option = "plasma",
alpha=0.25,
direction=-1),
popover = paste("Relev:", assesment$Skills[1:11])) # |>  column_spec(2, color = "white",
#              background = spec_color(assesment$Competence[1:11],
#           end = 0.9,
#           option = "plasma",
#           direction=1),
#              popover = paste("Compet:", assesment$Skills[1:11]))
Assesment_Ranger
# ld |>
#   count(delivery_method) |>
#   mutate(p = n / sum(n)) |>
#   gt() |>
#   fmt_percent(
#     columns = p,
#     decimals = 1
#   ) |>
#   tab_style(
#     style = cell_text(color = "#ae8b2d", weight = "bold"),
#     locations = cells_body(
#       columns = everything(),
#       rows = delivery_method == "Cesarean"
#     )
#   ) |>
#   tab_style(
#     style = cell_text(color = "#0e2635", weight = "bold"),
#     locations = cells_body(
#       columns = everything(),
#       rows = delivery_method == "Vaginal"
#     )
#   ) |>
#   cols_label(
#     delivery_method = "",
#     n = "Number of<br>deliveries",
#     p = "Proportion of<br>deliveries",
#     .fn = md
#   )
#| title: Assesment of Skills
# ld |> count(Pais) |>
#   mutate(prop = n / sum(n) *100) |>
#   mutate(ypos = cumsum(prop)- 0.6*prop ) |>
#
#   ggplot(aes(x="", y=prop, fill=Pais)) +
#   geom_bar(stat="identity", width=1, color="white") +
#   coord_polar("y", start=0) +
#   theme_void() # remove background, grid, numeric labels
#
###############
# Counts
###############
category_relevance <- as.data.frame(unique(factor(ranger$Relevance_skill_1)))
category_relevance$score <- c(1,0,-1)
category_competence <- as.data.frame(unique(factor(ranger$Competence_skill_1)))
category_competence$score <- c(3,2,1,4)
assesment <- matrix(nrow = 11, ncol = 2) # two colums
category_competence
#### LOOP
for(i in 1:11){
# Relevance_skill_1
names(category_relevance) <- c(paste("Relevance_skill_",i, sep=""),
paste("score_Relev_",i, sep=""))
# Competence_skill_1
names(category_competence) <- c(paste("Competence_skill_",i, sep=""),
paste("score_Compet_",i, sep=""))
# fix -1
ranger_score <- ranger %>%
left_join(category_relevance) |> left_join(category_competence)
ind <- which(is.na(ranger_score[,42]))
b <- as.vector(ranger_score[,42])
ranger_score[,42] <- as.numeric(b[[1]])
ranger_score[ind,42] <- -1
d <- as.vector(ranger_score[,43])
ranger_score[,43] <- as.numeric(d[[1]])
assesment[i,] <- c(
round(sum(ranger_score[,42])/dim(ranger_score[,38])[1], digits=3),
round(sum(ranger_score[,43])/dim(ranger_score[,38])[1], digits=3)
)
}
ranger_score
assesment
#| title: Assesment of Skills
# ld |> count(Pais) |>
#   mutate(prop = n / sum(n) *100) |>
#   mutate(ypos = cumsum(prop)- 0.6*prop ) |>
#
#   ggplot(aes(x="", y=prop, fill=Pais)) +
#   geom_bar(stat="identity", width=1, color="white") +
#   coord_polar("y", start=0) +
#   theme_void() # remove background, grid, numeric labels
#
###############
# Counts
###############
category_relevance <- as.data.frame(unique(factor(ranger$Relevance_skill_1)))
category_relevance$score <- c(1,0,-1)
category_competence <- as.data.frame(unique(factor(ranger$Competence_skill_1)))
category_competence$score <- c(3,2,1,4)
assesment <- matrix(nrow = 11, ncol = 2) # two colums
#### LOOP
for(i in 1:11){
# Relevance_skill_1
names(category_relevance) <- c(paste("Relevance_skill_",i, sep=""),
paste("score_Relev_",i, sep=""))
# Competence_skill_1
names(category_competence) <- c(paste("Competence_skill_",i, sep=""),
paste("score_Compet_",i, sep=""))
# fix -1
ranger_score <- ranger %>%
left_join(category_relevance) |> left_join(category_competence)
ind <- which(is.na(ranger_score[,43]))
b <- as.vector(ranger_score[,43])
ranger_score[,43] <- as.numeric(b[[1]])
ranger_score[ind,43] <- -1
d <- as.vector(ranger_score[,44])
ranger_score[,44] <- as.numeric(d[[1]])
assesment[i,] <- c(
round(sum(ranger_score[,43])/dim(ranger_score[,38])[1], digits=3),
round(sum(ranger_score[,44])/dim(ranger_score[,38])[1], digits=3)
)
}
assesment <- as.data.frame(assesment)
names(assesment) <- c("Relevance", "Competence")
Skills <- c(
"Leadership and Management",
"Self-Motivation",
"Problem-Solving and Decision-Making",
"Organizational Management",
"Emotional Intelligence",
"Community Rights and Communication",
"Communication of Information and Ideas" ,
"Negotiation and Resolution of Interpersonal Conflicts" ,
"Description of Natural and Cultural Values in Protected Areas",
"Strategy and Threat Management in Protected Areas",
"Ranger Safety and Protection"
)
assesment$Skills <- as.vector(Skills)
Assesment_Ranger <- assesment |>
arrange(desc(Relevance)) |>
kbl() |>
kable_paper(full_width = T) |>
kable_styling(font_size = 7, "condensed") |>
row_spec(c(1,10), bold = T) |> #, color = "white", background = "gray75")
column_spec(1, color = "white",
background = spec_color(assesment$Relevance[1:11],
end = 0.9,
option = "plasma",
alpha=0.25,
direction=-1),
popover = paste("Relev:", assesment$Skills[1:11])) # |>  column_spec(2, color = "white",
#              background = spec_color(assesment$Competence[1:11],
#           end = 0.9,
#           option = "plasma",
#           direction=1),
#              popover = paste("Compet:", assesment$Skills[1:11]))
Assesment_Ranger
# ld |>
#   count(delivery_method) |>
#   mutate(p = n / sum(n)) |>
#   gt() |>
#   fmt_percent(
#     columns = p,
#     decimals = 1
#   ) |>
#   tab_style(
#     style = cell_text(color = "#ae8b2d", weight = "bold"),
#     locations = cells_body(
#       columns = everything(),
#       rows = delivery_method == "Cesarean"
#     )
#   ) |>
#   tab_style(
#     style = cell_text(color = "#0e2635", weight = "bold"),
#     locations = cells_body(
#       columns = everything(),
#       rows = delivery_method == "Vaginal"
#     )
#   ) |>
#   cols_label(
#     delivery_method = "",
#     n = "Number of<br>deliveries",
#     p = "Proportion of<br>deliveries",
#     .fn = md
#   )
Assesment_Ranger <- assesment |>
arrange(desc(Relevance)) |>
kbl() |>
kable_paper(full_width = T) |>
kable_styling(font_size = 7, "condensed") |>
row_spec(c(1,10), bold = T) # |> #, color = "white", background = "gray75")
#| title: Assesment of Skills
# ld |> count(Pais) |>
#   mutate(prop = n / sum(n) *100) |>
#   mutate(ypos = cumsum(prop)- 0.6*prop ) |>
#
#   ggplot(aes(x="", y=prop, fill=Pais)) +
#   geom_bar(stat="identity", width=1, color="white") +
#   coord_polar("y", start=0) +
#   theme_void() # remove background, grid, numeric labels
#
###############
# Counts
###############
category_relevance <- as.data.frame(unique(factor(ranger$Relevance_skill_1)))
category_relevance$score <- c(1,0,-1)
category_competence <- as.data.frame(unique(factor(ranger$Competence_skill_1)))
category_competence$score <- c(3,2,1,4)
assesment <- matrix(nrow = 11, ncol = 2) # two colums
#### LOOP
for(i in 1:11){
# Relevance_skill_1
names(category_relevance) <- c(paste("Relevance_skill_",i, sep=""),
paste("score_Relev_",i, sep=""))
# Competence_skill_1
names(category_competence) <- c(paste("Competence_skill_",i, sep=""),
paste("score_Compet_",i, sep=""))
# fix -1
ranger_score <- ranger %>%
left_join(category_relevance) |> left_join(category_competence)
ind <- which(is.na(ranger_score[,43]))
b <- as.vector(ranger_score[,43])
ranger_score[,43] <- as.numeric(b[[1]])
ranger_score[ind,43] <- -1
d <- as.vector(ranger_score[,44])
ranger_score[,44] <- as.numeric(d[[1]])
assesment[i,] <- c(
round(sum(ranger_score[,43])/dim(ranger_score[,38])[1], digits=3),
round(sum(ranger_score[,44])/dim(ranger_score[,38])[1], digits=3)
)
}
assesment <- as.data.frame(assesment)
names(assesment) <- c("Relevance", "Competence")
Skills <- c(
"Leadership and Management",
"Self-Motivation",
"Problem-Solving and Decision-Making",
"Organizational Management",
"Emotional Intelligence",
"Community Rights and Communication",
"Communication of Information and Ideas" ,
"Negotiation and Resolution of Interpersonal Conflicts" ,
"Description of Natural and Cultural Values in Protected Areas",
"Strategy and Threat Management in Protected Areas",
"Ranger Safety and Protection"
)
assesment$Skills <- as.vector(Skills)
Assesment_Ranger <- assesment |>
arrange(desc(Relevance)) |>
kbl() |>
kable_paper(full_width = T) |>
kable_styling(font_size = 7, "condensed") |>
row_spec(c(1,5), bold = T) # |> #, color = "white", background = "gray75")
# column_spec(1, color = "white",
#             background = spec_color(assesment$Relevance[1:11],
#          end = 0.9,
#          option = "plasma",
#          alpha=0.25,
#          direction=-1),
#             popover = paste("Relev:", assesment$Skills[1:11])) # |>  column_spec(2, color = "white",
#              background = spec_color(assesment$Competence[1:11],
#           end = 0.9,
#           option = "plasma",
#           direction=1),
#              popover = paste("Compet:", assesment$Skills[1:11]))
Assesment_Ranger
# ld |>
#   count(delivery_method) |>
#   mutate(p = n / sum(n)) |>
#   gt() |>
#   fmt_percent(
#     columns = p,
#     decimals = 1
#   ) |>
#   tab_style(
#     style = cell_text(color = "#ae8b2d", weight = "bold"),
#     locations = cells_body(
#       columns = everything(),
#       rows = delivery_method == "Cesarean"
#     )
#   ) |>
#   tab_style(
#     style = cell_text(color = "#0e2635", weight = "bold"),
#     locations = cells_body(
#       columns = everything(),
#       rows = delivery_method == "Vaginal"
#     )
#   ) |>
#   cols_label(
#     delivery_method = "",
#     n = "Number of<br>deliveries",
#     p = "Proportion of<br>deliveries",
#     .fn = md
#   )
#| title: Sentiment scores
#| fig-asp: 0.6
Ecuador_sentence_sentim$County <- "Ecuador"

{"title":"Amazon Rangers Dashboard","markdown":{"yaml":{"title":"Amazon Rangers Dashboard","format":{"dashboard":{"nav-buttons":["github"],"github":"https://github.com/dlizcano/interview-dashboard"}},"logo":"images/logo.png","theme":["sandstone","theme/custom.scss"],"fig-width":10,"fig-asp":0.3,"params":{"month":"October","year":"2023","us_cesarean_rate":0.321,"us_preterm_rate":0.1049,"threshold_diff":0.02},"editor_options":{"chunk_output_type":"console"}},"headingText":"Convertir a letras minúsculas el texto.","containsRefs":false,"markdown":"\n\n```{r}\n#| label: load-packages\n#| message: false\n\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(scales)\nlibrary(DT)\nlibrary(gt)\nlibrary(tm)\nlibrary(wordcloud2)\nlibrary(tidytext)\n\ntheme_set(theme_minimal(base_size = 24, base_family = \"Atkinson Hyperlegible\"))\n```\n\n```{r}\n#| label: load-data\n#| message: false\n\nld <- read_excel(\"data/Amazonia(1-428).xlsx\")\nld_old <- read_excel(\"data/ld.xlsx\")\n```\n\n```{r}\n#| label: set-inputs\n\nthecnical <- mean(\n  as.numeric(ld$`capacitaciónes técnicas`), na.rm = TRUE\n )\n\ninterpersonal <- mean(\n  as.numeric(ld$`capacitacion en blandas`), na.rm = TRUE\n )\n\n\n```\n\n```{r}\n#| label: prep-data\n\nld <- ld |>\n  mutate(Age=as.numeric(Edad)) |> \n  mutate(Technical_Training=as.numeric(`capacitaciónes técnicas`)) |> \n  mutate(SoftS_kills=as.numeric(`capacitacion en blandas`)) |> \n  mutate(Service_years=as.numeric(`Años de servicio`)) |> \n  mutate(Goverment_Agency=Agencia)\n\nservice_yr_mean <- mean(ld$Service_years)\n\ndocs <- Corpus(VectorSource(ld$`funciones y responsabilidades del cargo`))\ndocs <- tm_map(docs, content_transformer(tolower))\n# Remover números\ndocs <- tm_map(docs, removeNumbers)\n# Remover stopwords comunes\ndocs <- tm_map(docs, removeWords, stopwords(\"spanish\"))\n# Remover una palabra en particular.\n# Se especifica las stopwords como un vector de caracteres.\ndocs <- tm_map(docs, removeWords, c(\"área\", \"protegida\", \"realizar\", \"actividades\", \"ambiental\")) \n\n# remover signos de puntuación\ndocs <- tm_map(docs, removePunctuation)\n# Eliminar espacios en blanco extras.\ndocs <- tm_map(docs, stripWhitespace)\n\n#crear matriz documento de términos\ndtm <- TermDocumentMatrix(docs)\nmatriz <- as.matrix(dtm)\n# ordenar filas de la matriz en orden descendente\nv <- sort(rowSums(matriz),decreasing=TRUE)\n# convertir a data frame\nd <- data.frame(word = names(v),freq=v)\n# mostrar los primeros 10 términos que más se repiten\n# head(d, 10)\n\n```\n\n#  {.sidebar}\n\nThis dashboard displays statistics to better understand Amazon Rangers skills, identify areas for improvement, and potentially develop training programs.\n\n|              |   Average   |\n|--------------|---------------------|\n| **Service Years** |  `{r} round(service_yr_mean, 1)` |\n| **Technical training** | `{r} round(thecnical, 1)` |\n| **Interpersonal training** | `{r} round(interpersonal, 1)`   |\n\n------------------------------------------------------------------------\n\nRole and responsability\n\n `{r} wordcloud2(data=d, size = 0.5)`\n\n------------------------------------------------------------------------\n\n::: {.callout-note collapse=\"true\"}\n## Disclaimer\n\nThe Data was anonymized. This initiative is part of the Amazon Sustainable Landscapes Program, funded by the Global Environment Facility (GEF) and led by the World Bank. \n:::\n\n# All\n\n```{r}\n#| label: all-values\n#| results: hide\n\nn_respondants <- nrow(ld)\n\nn_Genero <- ld |>\n  count(Genero)  \n\nmales <- n_Genero[2,2]\nfemales <- n_Genero[1,2]\n\ntotal <- sum(n_Genero$n)\n\n# p_cesarean_color <- case_when(\n#   between(p_cesarean, params$us_cesarean_rate, params$us_cesarean_rate + params$threshold_diff) ~ \"warning\",\n#   p_cesarean > params$us_cesarean_rate + params$threshold_diff ~ \"danger\",\n#   .default = \"light\"\n#   )\n# \n# p_preterm <- ld |>\n#   count(term) |>\n#   mutate(p = n / sum(n)) |>\n#   filter(term == \"Pre-term\") |>\n#   pull(p)\n# \n# p_preterm_color <- case_when(\n#   between(p_preterm, params$us_preterm_rate, params$us_preterm_rate + params$threshold_diff) ~ \"warning\",\n#   p_preterm > params$us_preterm_rate + params$threshold_diff ~ \"danger\",\n#   .default = \"light\"\n#   )\n\n```\n\n## Row {height=\"15%\"}\n\n```{r}\n#| content: valuebox\n#| title: \"Total respondant\"\n\nlist(\n  #icon = \"person-bounding-box\",\n  color = \"primary\",\n  value = n_respondants\n)\n```\n\n```{r}\n#| content: valuebox\n#| title: \"Males\"\n\nlist(\n  #icon = \"gender-male\",\n  color =  \"warning\", # p_cesarean_color,\n  value = label_percent(accuracy = 1)(males$n/total)\n)\n```\n\n```{r}\n#| content: valuebox\n#| title: \"Females\"\n\nlist(\n  #icon = \"gender-female\",\n  color = \"warning\", #p_preterm_color,\n  value = label_percent(accuracy = 1)(females$n/total)\n)\n```\n\n## Row {height=\"35%\"}\n\n### Column {width=\"40%\"}\n\n```{r}\n#| title: Countries\n\nld |> count(Pais) |> \n  mutate(prop = n / sum(n) *100) |> \n  mutate(ypos = cumsum(prop)- 0.6*prop ) |> \n\n  ggplot(aes(x=\"\", y=prop, fill=Pais)) +\n  geom_bar(stat=\"identity\", width=1, color=\"white\") +\n  coord_polar(\"y\", start=0) +\n  theme_void() # remove background, grid, numeric labels\n  \n\n# ld |>\n#   count(delivery_method) |>\n#   mutate(p = n / sum(n)) |>\n#   gt() |>\n#   fmt_percent(\n#     columns = p,\n#     decimals = 1\n#   ) |>\n#   tab_style(\n#     style = cell_text(color = \"#ae8b2d\", weight = \"bold\"),\n#     locations = cells_body(\n#       columns = everything(),\n#       rows = delivery_method == \"Cesarean\"\n#     )\n#   ) |>\n#   tab_style(\n#     style = cell_text(color = \"#0e2635\", weight = \"bold\"),\n#     locations = cells_body(\n#       columns = everything(),\n#       rows = delivery_method == \"Vaginal\"\n#     )\n#   ) |>\n#   cols_label(\n#     delivery_method = \"\",\n#     n = \"Number of<br>deliveries\",\n#     p = \"Proportion of<br>deliveries\",\n#     .fn = md\n#   )\n\n```\n\n### Column {width=\"60%\"}\n\n```{r}\n#| title: Ages\n\n\nld |> group_by(Genero) |> \n  #count(Edad) |>\n  #mutate(p = n / sum(n)) |>\n  ggplot( aes(x=Age, fill=Genero)) +\n  geom_histogram( alpha=0.7, position = 'identity', binwidth=1) +\n  # scale_fill_manual(values=c(\"#69b3a2\", \"#404080\")) +\n  labs(x = NULL) # +\n  # scale_y_continuous(\n  #   \"Count\",\n  #   sec.axis = sec_axis(~ . / n_births, name = \"Proportion\", labels = label_percent())\n  # )\n```\n\n## Row {height=\"50%\"}\n\n```{r}\n#| title: Relvance of the Skill Males\n\nld |> filter(Genero==\"Masculino\") |> \n  count(Relevance_of_the_skill, Skill_competency) |>\n  ggplot(aes(x = n, y = fct_rev(Relevance_of_the_skill), fill = Skill_competency)) +\n  geom_col(position = \"fill\", color = \"white\") +\n  scale_fill_manual(\n    values = c(\"#ae8b2d\", \"#0e2635\", \"#873e23\", \"#abdbe3\"),\n    guide = guide_legend(reverse = TRUE)\n  ) +\n  scale_x_continuous(labels = label_percent()) +\n  labs(y = NULL, x = NULL, fill = \"Skill competency\\nfor my role\")\n```\n\n```{r}\n#| title: Relvance of the Skill Females\n\n# ld_old |>\n#   count(maternal_age, delivery_method) |>\n#   ggplot(aes(x = n, y = fct_rev(maternal_age), fill = delivery_method)) +\n#   geom_col(position = \"fill\", color = \"white\") +\n#   scale_fill_manual(\n#     values = c(\"#ae8b2d\", \"#0e2635\"),\n#     guide = guide_legend(reverse = TRUE)\n#   ) +\n#   scale_x_continuous(labels = label_percent()) +\n#   labs(y = NULL, x = NULL)#, fill = \"Delivery\\nmethod\")\n\nld |> filter(Genero==\"Femenino\") |> \n  count(Relevance_of_the_skill, Skill_competency) |>\n  ggplot(aes(x = n, y = fct_rev(Relevance_of_the_skill), fill = Skill_competency)) +\n  geom_col(position = \"fill\", color = \"white\") +\n  scale_fill_manual(\n    values = c(\"#ae8b2d\", \"#0e2635\", \"#873e23\", \"#abdbe3\"),\n    guide = guide_legend(reverse = TRUE)\n  ) +\n  scale_x_continuous(labels = label_percent()) +\n  labs(y = NULL, x = NULL, fill = \"Skill competency\\nfor my role\")\n\n```\n\n\n# Colombia {orientation=\"columns\"}\n\n## Column {width=\"60%\"}\n\n```{r}\n#| label: vaginal-values\n#| results: hide\n\nld_col <- ld |>\n  filter(Pais == \"Colombia\")\n\nn_respondants_co <- nrow(ld_col)\n\nn_Genero_col <- ld_col |>\n  count(Genero)  \n\nmales_col <- n_Genero_col[2,2]\nfemales_col <- n_Genero_col[1,2]\n\ntotal_col <- sum(n_Genero_col$n)\n\n```\n\n### Row {height=\"20%\"}\n\n```{r}\n#| component: valuebox\n#| title: \"Males\"\n\nlist(\n  # icon = \"file-medical\",\n  color = \"primary\",\n  value = label_percent(accuracy = 1)(males_col$n/total)\n)\n```\n\n```{r}\n#| component: valuebox\n#| title: \"Females\"\n\nlist(\n  # icon = \"calendar-week\",\n  color = \"warning\",\n  value = label_percent(accuracy = 0.1)(females_col$n/total)\n)\n```\n\n### Row {height=\"40%\"}\n\n```{r}\n#| title: Protected Areas\n\nld_col |> count(Protected_Area) |> \n  mutate(prop = n / sum(n) *100) |> \n  mutate(ypos = cumsum(prop)- 0.5*prop ) |> \n\n  ggplot(aes(x=\"\", y=prop, fill=Protected_Area)) +\n  geom_bar(stat=\"identity\", width=1, color=\"white\") +\n  coord_polar(\"y\", start=0) +\n  theme_void()\n\n```\n\n### Row {height=\"40%\" .tabset}\n\n```{r}\n#| title: Relvance of the Skill Males\n\nld_col |> filter(Genero==\"Masculino\") |> \n  count(Relevance_of_the_skill, Skill_competency) |>\n  ggplot(aes(x = n, y = fct_rev(Relevance_of_the_skill), fill = Skill_competency)) +\n  geom_col(position = \"fill\", color = \"white\") +\n  scale_fill_manual(\n    values = c(\"#ae8b2d\", \"#0e2635\", \"#873e23\", \"#abdbe3\"),\n    guide = guide_legend(reverse = TRUE)\n  ) +\n  scale_x_continuous(labels = label_percent()) +\n  labs(y = NULL, x = NULL, fill = \"Skill competency\\nfor my role\")\n```\n\n```{r}\n#| title: Relvance of the Skill Females\n\nld_col |> filter(Genero==\"Femenino\") |> \n  count(Relevance_of_the_skill, Skill_competency) |>\n  ggplot(aes(x = n, y = fct_rev(Relevance_of_the_skill), fill = Skill_competency)) +\n  geom_col(position = \"fill\", color = \"white\") +\n  scale_fill_manual(\n    values = c(\"#ae8b2d\", \"#0e2635\", \"#873e23\", \"#abdbe3\"),\n    guide = guide_legend(reverse = TRUE)\n  ) +\n  scale_x_continuous(labels = label_percent()) +\n  labs(y = NULL, x = NULL, fill = \"Skill competency\\nfor my role\")\n```\n\n## Column {width=\"40%\"}\n\n```{r}\n#| title: Needs\n\ndocs_col <- Corpus(VectorSource(na.omit(ld_col$needs)))\n# Convertir a letras minúsculas el texto.\ndocs_col <- tm_map(docs_col, content_transformer(tolower))\n# Remover números\ndocs_col <- tm_map(docs_col, removeNumbers)\n# Remover stopwords comunes\ndocs_col <- tm_map(docs_col, removeWords, stopwords(\"spanish\"))\n# Remover una palabra en particular.\n# Se especifica las stopwords como un vector de caracteres.\n# docs_col <- tm_map(docs_col, removeWords, c(\"área\", \"protegida\", \"realizar\", \"actividades\", \"ambiental\")) \n\n# remover signos de puntuación\n# docs_col <- tm_map(docs_col, removePunctuation)\n# Eliminar espacios en blanco extras.\ndocs_col <- tm_map(docs_col, stripWhitespace)\n\na <- data.frame(text=sapply(docs_col, identity), \n                        stringsAsFactors=F)\n\nb <- a |> unnest_tokens(output = sentence, \n                        input = text, \n                        token = \"sentences\")\n\ndatatable(b)\n\n# #crear matriz documento de términos\n# dtm_col <- TermDocumentMatrix(docs_col)\n# matriz_col <- as.matrix(dtm_col)\n# # ordenar filas de la matriz en orden descendente\n# v_col <- sort(rowSums(matriz_col),decreasing=TRUE)\n# # convertir a data frame\n# d_col <- data.frame(word = names(v),freq=v)\n# # mostrar los primeros 10 términos que más se repiten\n# # head(d, 10)\n# wordcloud2(data=d_col, size = 0.5)\n#   \n```\n\n\n\n# Data\n\n```{r}\nld |>  select(Edad, \n                        Service_years,\n                        Agencia, \n                        Genero,\n                        Pais,\n                        Relevance_of_the_skill,\n                        Skill_competency) |> \n  datatable(\n    # colnames = c(\"ID\", \"Maternal age\", \"Delivery method\", \"Parity\", \"Term\"),\n    options = list(dom = 'ftp', paging = TRUE)\n    )\n```\n","srcMarkdownNoYaml":"\n\n```{r}\n#| label: load-packages\n#| message: false\n\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(scales)\nlibrary(DT)\nlibrary(gt)\nlibrary(tm)\nlibrary(wordcloud2)\nlibrary(tidytext)\n\ntheme_set(theme_minimal(base_size = 24, base_family = \"Atkinson Hyperlegible\"))\n```\n\n```{r}\n#| label: load-data\n#| message: false\n\nld <- read_excel(\"data/Amazonia(1-428).xlsx\")\nld_old <- read_excel(\"data/ld.xlsx\")\n```\n\n```{r}\n#| label: set-inputs\n\nthecnical <- mean(\n  as.numeric(ld$`capacitaciónes técnicas`), na.rm = TRUE\n )\n\ninterpersonal <- mean(\n  as.numeric(ld$`capacitacion en blandas`), na.rm = TRUE\n )\n\n\n```\n\n```{r}\n#| label: prep-data\n\nld <- ld |>\n  mutate(Age=as.numeric(Edad)) |> \n  mutate(Technical_Training=as.numeric(`capacitaciónes técnicas`)) |> \n  mutate(SoftS_kills=as.numeric(`capacitacion en blandas`)) |> \n  mutate(Service_years=as.numeric(`Años de servicio`)) |> \n  mutate(Goverment_Agency=Agencia)\n\nservice_yr_mean <- mean(ld$Service_years)\n\ndocs <- Corpus(VectorSource(ld$`funciones y responsabilidades del cargo`))\n# Convertir a letras minúsculas el texto.\ndocs <- tm_map(docs, content_transformer(tolower))\n# Remover números\ndocs <- tm_map(docs, removeNumbers)\n# Remover stopwords comunes\ndocs <- tm_map(docs, removeWords, stopwords(\"spanish\"))\n# Remover una palabra en particular.\n# Se especifica las stopwords como un vector de caracteres.\ndocs <- tm_map(docs, removeWords, c(\"área\", \"protegida\", \"realizar\", \"actividades\", \"ambiental\")) \n\n# remover signos de puntuación\ndocs <- tm_map(docs, removePunctuation)\n# Eliminar espacios en blanco extras.\ndocs <- tm_map(docs, stripWhitespace)\n\n#crear matriz documento de términos\ndtm <- TermDocumentMatrix(docs)\nmatriz <- as.matrix(dtm)\n# ordenar filas de la matriz en orden descendente\nv <- sort(rowSums(matriz),decreasing=TRUE)\n# convertir a data frame\nd <- data.frame(word = names(v),freq=v)\n# mostrar los primeros 10 términos que más se repiten\n# head(d, 10)\n\n```\n\n#  {.sidebar}\n\nThis dashboard displays statistics to better understand Amazon Rangers skills, identify areas for improvement, and potentially develop training programs.\n\n|              |   Average   |\n|--------------|---------------------|\n| **Service Years** |  `{r} round(service_yr_mean, 1)` |\n| **Technical training** | `{r} round(thecnical, 1)` |\n| **Interpersonal training** | `{r} round(interpersonal, 1)`   |\n\n------------------------------------------------------------------------\n\nRole and responsability\n\n `{r} wordcloud2(data=d, size = 0.5)`\n\n------------------------------------------------------------------------\n\n::: {.callout-note collapse=\"true\"}\n## Disclaimer\n\nThe Data was anonymized. This initiative is part of the Amazon Sustainable Landscapes Program, funded by the Global Environment Facility (GEF) and led by the World Bank. \n:::\n\n# All\n\n```{r}\n#| label: all-values\n#| results: hide\n\nn_respondants <- nrow(ld)\n\nn_Genero <- ld |>\n  count(Genero)  \n\nmales <- n_Genero[2,2]\nfemales <- n_Genero[1,2]\n\ntotal <- sum(n_Genero$n)\n\n# p_cesarean_color <- case_when(\n#   between(p_cesarean, params$us_cesarean_rate, params$us_cesarean_rate + params$threshold_diff) ~ \"warning\",\n#   p_cesarean > params$us_cesarean_rate + params$threshold_diff ~ \"danger\",\n#   .default = \"light\"\n#   )\n# \n# p_preterm <- ld |>\n#   count(term) |>\n#   mutate(p = n / sum(n)) |>\n#   filter(term == \"Pre-term\") |>\n#   pull(p)\n# \n# p_preterm_color <- case_when(\n#   between(p_preterm, params$us_preterm_rate, params$us_preterm_rate + params$threshold_diff) ~ \"warning\",\n#   p_preterm > params$us_preterm_rate + params$threshold_diff ~ \"danger\",\n#   .default = \"light\"\n#   )\n\n```\n\n## Row {height=\"15%\"}\n\n```{r}\n#| content: valuebox\n#| title: \"Total respondant\"\n\nlist(\n  #icon = \"person-bounding-box\",\n  color = \"primary\",\n  value = n_respondants\n)\n```\n\n```{r}\n#| content: valuebox\n#| title: \"Males\"\n\nlist(\n  #icon = \"gender-male\",\n  color =  \"warning\", # p_cesarean_color,\n  value = label_percent(accuracy = 1)(males$n/total)\n)\n```\n\n```{r}\n#| content: valuebox\n#| title: \"Females\"\n\nlist(\n  #icon = \"gender-female\",\n  color = \"warning\", #p_preterm_color,\n  value = label_percent(accuracy = 1)(females$n/total)\n)\n```\n\n## Row {height=\"35%\"}\n\n### Column {width=\"40%\"}\n\n```{r}\n#| title: Countries\n\nld |> count(Pais) |> \n  mutate(prop = n / sum(n) *100) |> \n  mutate(ypos = cumsum(prop)- 0.6*prop ) |> \n\n  ggplot(aes(x=\"\", y=prop, fill=Pais)) +\n  geom_bar(stat=\"identity\", width=1, color=\"white\") +\n  coord_polar(\"y\", start=0) +\n  theme_void() # remove background, grid, numeric labels\n  \n\n# ld |>\n#   count(delivery_method) |>\n#   mutate(p = n / sum(n)) |>\n#   gt() |>\n#   fmt_percent(\n#     columns = p,\n#     decimals = 1\n#   ) |>\n#   tab_style(\n#     style = cell_text(color = \"#ae8b2d\", weight = \"bold\"),\n#     locations = cells_body(\n#       columns = everything(),\n#       rows = delivery_method == \"Cesarean\"\n#     )\n#   ) |>\n#   tab_style(\n#     style = cell_text(color = \"#0e2635\", weight = \"bold\"),\n#     locations = cells_body(\n#       columns = everything(),\n#       rows = delivery_method == \"Vaginal\"\n#     )\n#   ) |>\n#   cols_label(\n#     delivery_method = \"\",\n#     n = \"Number of<br>deliveries\",\n#     p = \"Proportion of<br>deliveries\",\n#     .fn = md\n#   )\n\n```\n\n### Column {width=\"60%\"}\n\n```{r}\n#| title: Ages\n\n\nld |> group_by(Genero) |> \n  #count(Edad) |>\n  #mutate(p = n / sum(n)) |>\n  ggplot( aes(x=Age, fill=Genero)) +\n  geom_histogram( alpha=0.7, position = 'identity', binwidth=1) +\n  # scale_fill_manual(values=c(\"#69b3a2\", \"#404080\")) +\n  labs(x = NULL) # +\n  # scale_y_continuous(\n  #   \"Count\",\n  #   sec.axis = sec_axis(~ . / n_births, name = \"Proportion\", labels = label_percent())\n  # )\n```\n\n## Row {height=\"50%\"}\n\n```{r}\n#| title: Relvance of the Skill Males\n\nld |> filter(Genero==\"Masculino\") |> \n  count(Relevance_of_the_skill, Skill_competency) |>\n  ggplot(aes(x = n, y = fct_rev(Relevance_of_the_skill), fill = Skill_competency)) +\n  geom_col(position = \"fill\", color = \"white\") +\n  scale_fill_manual(\n    values = c(\"#ae8b2d\", \"#0e2635\", \"#873e23\", \"#abdbe3\"),\n    guide = guide_legend(reverse = TRUE)\n  ) +\n  scale_x_continuous(labels = label_percent()) +\n  labs(y = NULL, x = NULL, fill = \"Skill competency\\nfor my role\")\n```\n\n```{r}\n#| title: Relvance of the Skill Females\n\n# ld_old |>\n#   count(maternal_age, delivery_method) |>\n#   ggplot(aes(x = n, y = fct_rev(maternal_age), fill = delivery_method)) +\n#   geom_col(position = \"fill\", color = \"white\") +\n#   scale_fill_manual(\n#     values = c(\"#ae8b2d\", \"#0e2635\"),\n#     guide = guide_legend(reverse = TRUE)\n#   ) +\n#   scale_x_continuous(labels = label_percent()) +\n#   labs(y = NULL, x = NULL)#, fill = \"Delivery\\nmethod\")\n\nld |> filter(Genero==\"Femenino\") |> \n  count(Relevance_of_the_skill, Skill_competency) |>\n  ggplot(aes(x = n, y = fct_rev(Relevance_of_the_skill), fill = Skill_competency)) +\n  geom_col(position = \"fill\", color = \"white\") +\n  scale_fill_manual(\n    values = c(\"#ae8b2d\", \"#0e2635\", \"#873e23\", \"#abdbe3\"),\n    guide = guide_legend(reverse = TRUE)\n  ) +\n  scale_x_continuous(labels = label_percent()) +\n  labs(y = NULL, x = NULL, fill = \"Skill competency\\nfor my role\")\n\n```\n\n\n# Colombia {orientation=\"columns\"}\n\n## Column {width=\"60%\"}\n\n```{r}\n#| label: vaginal-values\n#| results: hide\n\nld_col <- ld |>\n  filter(Pais == \"Colombia\")\n\nn_respondants_co <- nrow(ld_col)\n\nn_Genero_col <- ld_col |>\n  count(Genero)  \n\nmales_col <- n_Genero_col[2,2]\nfemales_col <- n_Genero_col[1,2]\n\ntotal_col <- sum(n_Genero_col$n)\n\n```\n\n### Row {height=\"20%\"}\n\n```{r}\n#| component: valuebox\n#| title: \"Males\"\n\nlist(\n  # icon = \"file-medical\",\n  color = \"primary\",\n  value = label_percent(accuracy = 1)(males_col$n/total)\n)\n```\n\n```{r}\n#| component: valuebox\n#| title: \"Females\"\n\nlist(\n  # icon = \"calendar-week\",\n  color = \"warning\",\n  value = label_percent(accuracy = 0.1)(females_col$n/total)\n)\n```\n\n### Row {height=\"40%\"}\n\n```{r}\n#| title: Protected Areas\n\nld_col |> count(Protected_Area) |> \n  mutate(prop = n / sum(n) *100) |> \n  mutate(ypos = cumsum(prop)- 0.5*prop ) |> \n\n  ggplot(aes(x=\"\", y=prop, fill=Protected_Area)) +\n  geom_bar(stat=\"identity\", width=1, color=\"white\") +\n  coord_polar(\"y\", start=0) +\n  theme_void()\n\n```\n\n### Row {height=\"40%\" .tabset}\n\n```{r}\n#| title: Relvance of the Skill Males\n\nld_col |> filter(Genero==\"Masculino\") |> \n  count(Relevance_of_the_skill, Skill_competency) |>\n  ggplot(aes(x = n, y = fct_rev(Relevance_of_the_skill), fill = Skill_competency)) +\n  geom_col(position = \"fill\", color = \"white\") +\n  scale_fill_manual(\n    values = c(\"#ae8b2d\", \"#0e2635\", \"#873e23\", \"#abdbe3\"),\n    guide = guide_legend(reverse = TRUE)\n  ) +\n  scale_x_continuous(labels = label_percent()) +\n  labs(y = NULL, x = NULL, fill = \"Skill competency\\nfor my role\")\n```\n\n```{r}\n#| title: Relvance of the Skill Females\n\nld_col |> filter(Genero==\"Femenino\") |> \n  count(Relevance_of_the_skill, Skill_competency) |>\n  ggplot(aes(x = n, y = fct_rev(Relevance_of_the_skill), fill = Skill_competency)) +\n  geom_col(position = \"fill\", color = \"white\") +\n  scale_fill_manual(\n    values = c(\"#ae8b2d\", \"#0e2635\", \"#873e23\", \"#abdbe3\"),\n    guide = guide_legend(reverse = TRUE)\n  ) +\n  scale_x_continuous(labels = label_percent()) +\n  labs(y = NULL, x = NULL, fill = \"Skill competency\\nfor my role\")\n```\n\n## Column {width=\"40%\"}\n\n```{r}\n#| title: Needs\n\ndocs_col <- Corpus(VectorSource(na.omit(ld_col$needs)))\n# Convertir a letras minúsculas el texto.\ndocs_col <- tm_map(docs_col, content_transformer(tolower))\n# Remover números\ndocs_col <- tm_map(docs_col, removeNumbers)\n# Remover stopwords comunes\ndocs_col <- tm_map(docs_col, removeWords, stopwords(\"spanish\"))\n# Remover una palabra en particular.\n# Se especifica las stopwords como un vector de caracteres.\n# docs_col <- tm_map(docs_col, removeWords, c(\"área\", \"protegida\", \"realizar\", \"actividades\", \"ambiental\")) \n\n# remover signos de puntuación\n# docs_col <- tm_map(docs_col, removePunctuation)\n# Eliminar espacios en blanco extras.\ndocs_col <- tm_map(docs_col, stripWhitespace)\n\na <- data.frame(text=sapply(docs_col, identity), \n                        stringsAsFactors=F)\n\nb <- a |> unnest_tokens(output = sentence, \n                        input = text, \n                        token = \"sentences\")\n\ndatatable(b)\n\n# #crear matriz documento de términos\n# dtm_col <- TermDocumentMatrix(docs_col)\n# matriz_col <- as.matrix(dtm_col)\n# # ordenar filas de la matriz en orden descendente\n# v_col <- sort(rowSums(matriz_col),decreasing=TRUE)\n# # convertir a data frame\n# d_col <- data.frame(word = names(v),freq=v)\n# # mostrar los primeros 10 términos que más se repiten\n# # head(d, 10)\n# wordcloud2(data=d_col, size = 0.5)\n#   \n```\n\n\n\n# Data\n\n```{r}\nld |>  select(Edad, \n                        Service_years,\n                        Agencia, \n                        Genero,\n                        Pais,\n                        Relevance_of_the_skill,\n                        Skill_competency) |> \n  datatable(\n    # colnames = c(\"ID\", \"Maternal age\", \"Delivery method\", \"Parity\", \"Term\"),\n    options = list(dom = 'ftp', paging = TRUE)\n    )\n```\n"},"formats":{"dashboard":{"identifier":{"display-name":"HTML","target-format":"dashboard","base-format":"dashboard"},"execute":{"fig-width":10,"fig-height":5,"fig-format":"retina","fig-dpi":96,"fig-asp":0.3,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":"all","plotly-connected":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.46","page-layout":"custom","editor":"visual","title":"Amazon Rangers Dashboard","logo":"images/logo.png","params":{"month":"October","year":"2023","us_cesarean_rate":0.321,"us_preterm_rate":0.1049,"threshold_diff":0.02},"editor_options":{"chunk_output_type":"console"},"nav-buttons":["github"],"github":"https://github.com/dlizcano/interview-dashboard"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}
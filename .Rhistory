levels=c("1","2", "3", "4"))
}
# change names
names(scores_Compet_males_P) <- Skills_short
# Build plot
p <- likert(scores_Compet_males_P)
plot(p,  centered = TRUE, wrap = 50, wrap.grouping = 50, plot.percent.low = FALSE, plot.percent.high = FALSE, panel.arrange = "v")
# ld_col |> filter(Genero=="Masculino") |>
#     count(Relevance_skill_1, Competence_skill_1) |>
#     ggplot(aes(x = n, y = fct_rev(Relevance_skill_1), fill = Competence_skill_1)) +
#     geom_col(position = "fill", color = "white") +
#     scale_fill_manual(
#         values = c("#ae8b2d", "#0e2635", "#873e23", "#abdbe3"),
#         guide = guide_legend(reverse = TRUE)
#     ) +
#     scale_x_continuous(labels = label_percent()) +
#     labs(y = NULL, x = NULL, fill = "Skill competence\nfor my role")
#| title: Competence of Skills for Women
ld_f_P <- ld |> filter(Pais=="PerÃº", Genero=="Femenino") |> f.assesment()
scores_Compet_females_P  <- as.data.frame(ld_f_P[,c(2,4,6,8,10,12,14,16,18,20,22)])
#make factors =4
for(y in 1:11){
scores_Compet_females_P[,y] <- factor(scores_Compet_females_P[,y],
levels=c("1","2", "3", "4"))
}
# change names
names(scores_Compet_females_P) <- Skills_short
# Build plot
p <- likert(scores_Compet_females_P)
plot(p,  centered = TRUE, wrap = 50, wrap.grouping = 50, plot.percent.low = FALSE, plot.percent.high = FALSE, panel.arrange = "v")
# ld_col |> filter(Genero=="Femenino") |>
#     count(Relevance_skill_1, Competence_skill_1) |>
#     ggplot(aes(x = n, y = fct_rev(Relevance_skill_1), fill = Competence_skill_1)) +
#     geom_col(position = "fill", color = "white") +
#     scale_fill_manual(
#         values = c("#ae8b2d", "#0e2635", "#873e23", "#abdbe3"),
#         guide = guide_legend(reverse = TRUE)
#     ) +
#     scale_x_continuous(labels = label_percent()) +
#     labs(y = NULL, x = NULL, fill = "Skill competence\nfor my role")
#| label: Bolivia-values
#| results: hide
ld_bo <- ld |>
filter(Pais == "Bolivia")
n_respondants_bo <- nrow(ld_bo)
n_Genero_bo <- ld_bo |>
count(Genero)
males_bo <- n_Genero_bo[2,2]
females_bo <- n_Genero_bo[1,2]
total_bo <- sum(n_Genero_bo$n)
#| component: valuebox
#| title: "Total"
list(
# icon = "file-medical",
color = "primary",
value = (total_bo)
)
#| component: valuebox
#| title: "Man"
list(
# icon = "file-medical",
color = "primary",
value = label_borcent(accuracy = 1)(males_bo$n/total_bo)
)
#| component: valuebox
#| title: "Man"
list(
# icon = "file-medical",
color = "primary",
value = label_percent(accuracy = 1)(males_bo$n/total_bo)
)
#| component: valuebox
#| title: "Woman"
list(
# icon = "calendar-week",
color = "warning",
value = label_percent(accuracy = 0.1)(females_bo$n/total_bo)
)
#| title: Protected Areas
ld_bo |> count(Protected_Area) |>
mutate(prop = n / sum(n) *100) |>
mutate(ypos = cumsum(prop)- 0.5*prop ) |>
ggplot(aes(x="", y=prop, fill=Protected_Area)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void()
#| title: Competence of Skills for Men
ld_m_B <- ld |> filter(Pais=="Bolivia", Genero=="Masculino") |> f.assesment()
scores_Compet_males_B  <- as.data.frame(ld_m_B[,c(2,4,6,8,10,12,14,16,18,20,22)])
#make factors =4
for(y in 1:11){
scores_Compet_males_B[,y] <- factor(scores_Compet_males_B[,y],
levels=c("1","2", "3", "4"))
}
# change names
names(scores_Compet_males_B) <- Skills_short
# Build plot
p <- likert(scores_Compet_males_B)
plot(p,  centered = TRUE, wrap = 50, wrap.grouping = 50, plot.percent.low = FALSE, plot.percent.high = FALSE, panel.arrange = "v")
# ld_col |> filter(Genero=="Masculino") |>
#     count(Relevance_skill_1, Competence_skill_1) |>
#     ggplot(aes(x = n, y = fct_rev(Relevance_skill_1), fill = Competence_skill_1)) +
#     geom_col(position = "fill", color = "white") +
#     scale_fill_manual(
#         values = c("#ae8b2d", "#0e2635", "#873e23", "#abdbe3"),
#         guide = guide_legend(reverse = TRUE)
#     ) +
#     scale_x_continuous(labels = label_percent()) +
#     labs(y = NULL, x = NULL, fill = "Skill competence\nfor my role")
#| title: Competence of Skills for Women
ld_f_B <- ld |> filter(Pais=="Bolivia", Genero=="Femenino") |> f.assesment()
scores_Compet_females_B  <- as.data.frame(ld_f_B[,c(2,4,6,8,10,12,14,16,18,20,22)])
#make factors =4
for(y in 1:11){
scores_Compet_females_B[,y] <- factor(scores_Compet_females_B[,y],
levels=c("1","2", "3", "4"))
}
# change names
names(scores_Compet_females_B) <- Skills_short
# Build plot
p <- likert(scores_Compet_females_B)
plot(p,  centered = TRUE, wrap = 50, wrap.grouping = 50, plot.percent.low = FALSE, plot.percent.high = FALSE, panel.arrange = "v")
# ld_col |> filter(Genero=="Femenino") |>
#     count(Relevance_skill_1, Competence_skill_1) |>
#     ggplot(aes(x = n, y = fct_rev(Relevance_skill_1), fill = Competence_skill_1)) +
#     geom_col(position = "fill", color = "white") +
#     scale_fill_manual(
#         values = c("#ae8b2d", "#0e2635", "#873e23", "#abdbe3"),
#         guide = guide_legend(reverse = TRUE)
#     ) +
#     scale_x_continuous(labels = label_percent()) +
#     labs(y = NULL, x = NULL, fill = "Skill competence\nfor my role")
#| label: Brasil-values
#| results: hide
ld_br <- ld |>
filter(Pais == "Brasil")
n_respondants_br <- nrow(ld_bo)
n_Genero_br <- ld_br |>
count(Genero)
males_br <- n_Genero_br[2,2]
females_br <- n_Genero_br[1,2]
total_br <- sum(n_Genero_br$n)
#| component: valuebox
#| title: "Total"
list(
# icon = "file-medical",
color = "primary",
value = (total_br)
)
#| component: valuebox
#| title: "Man"
list(
# icon = "file-medical",
color = "primary",
value = label_percent(accuracy = 1)(males_br$n/total_br)
)
#| component: valuebox
#| title: "Woman"
list(
# icon = "calendar-week",
color = "warning",
value = label_percent(accuracy = 0.1)(females_br$n/total_br)
)
#| title: Competence of Skills for Men
ld_m_Br <- ld |> filter(Pais=="Brasil", Genero=="Masculino") |> f.assesment()
scores_Compet_males_Br  <- as.data.frame(ld_m_Br[,c(2,4,6,8,10,12,14,16,18,20,22)])
#make factors =4
for(y in 1:11){
scores_Compet_males_Br[,y] <- factor(scores_Compet_males_Br[,y],
levels=c("1","2", "3", "4"))
}
# change names
names(scores_Compet_males_Br) <- Skills_short
# Build plot
p <- likert(scores_Compet_males_Br)
plot(p,  centered = TRUE, wrap = 50, wrap.grouping = 50, plot.percent.low = FALSE, plot.percent.high = FALSE, panel.arrange = "v")
# ld_col |> filter(Genero=="Masculino") |>
#     count(Relevance_skill_1, Competence_skill_1) |>
#     ggplot(aes(x = n, y = fct_rev(Relevance_skill_1), fill = Competence_skill_1)) +
#     geom_col(position = "fill", color = "white") +
#     scale_fill_manual(
#         values = c("#ae8b2d", "#0e2635", "#873e23", "#abdbe3"),
#         guide = guide_legend(reverse = TRUE)
#     ) +
#     scale_x_continuous(labels = label_percent()) +
#     labs(y = NULL, x = NULL, fill = "Skill competence\nfor my role")
#| title: Competence of Skills for Women
ld_f_Br <- ld |> filter(Pais=="Brasil", Genero=="Femenino") |> f.assesment()
scores_Compet_females_Br  <- as.data.frame(ld_f_Br[,c(2,4,6,8,10,12,14,16,18,20,22)])
#make factors =4
for(y in 1:11){
scores_Compet_females_Br[,y] <- factor(scores_Compet_females_Br[,y],
levels=c("1","2", "3", "4"))
}
# change names
names(scores_Compet_females_Br) <- Skills_short
# Build plot
p <- likert(scores_Compet_females_Br)
plot(p,  centered = TRUE, wrap = 50, wrap.grouping = 50, plot.percent.low = FALSE, plot.percent.high = FALSE, panel.arrange = "v")
# ld_col |> filter(Genero=="Femenino") |>
#     count(Relevance_skill_1, Competence_skill_1) |>
#     ggplot(aes(x = n, y = fct_rev(Relevance_skill_1), fill = Competence_skill_1)) +
#     geom_col(position = "fill", color = "white") +
#     scale_fill_manual(
#         values = c("#ae8b2d", "#0e2635", "#873e23", "#abdbe3"),
#         guide = guide_legend(reverse = TRUE)
#     ) +
#     scale_x_continuous(labels = label_percent()) +
#     labs(y = NULL, x = NULL, fill = "Skill competence\nfor my role")
#| label: Guyana-values
#| results: hide
ld_gy <- ld |>
filter(Pais == "Guayana")
n_respondants_gy <- nrow(ld_bo)
n_Genero_gy <- ld_gy |>
count(Genero)
males_gy <- n_Genero_gy[2,2]
females_gy <- n_Genero_gy[1,2]
total_gy <- sum(n_Genero_gy$n)
#| component: valuebox
#| title: "Total"
list(
# icon = "file-medical",
color = "primary",
value = (total_gy)
)
#| label: Guyana-values
#| results: hide
ld_gy <- ld |>
filter(Pais == "Guayana")
ld_gy
#| label: Guyana-values
#| results: hide
ld_gy <- ld |>
filter(Pais == "Guyana")
#| label: Guyana-values
#| results: hide
ld_gy <- ld |>
filter(Pais == "Guyana")
n_respondants_gy <- nrow(ld_bo)
n_Genero_gy <- ld_gy |>
count(Genero)
males_gy <- n_Genero_gy[2,2]
females_gy <- n_Genero_gy[1,2]
total_gy <- sum(n_Genero_gy$n)
n_respondants_gy
n_respondants_gy <- nrow(ld_gy)
#| label: Guyana-values
#| results: hide
ld_gy <- ld |>
filter(Pais == "Guyana")
n_respondants_gy <- nrow(ld_gy)
n_Genero_gy <- ld_gy |>
count(Genero)
males_gy <- n_Genero_gy[2,2]
females_gy <- n_Genero_gy[1,2]
total_gy <- sum(n_Genero_gy$n)
#| component: valuebox
#| title: "Total"
list(
# icon = "file-medical",
color = "primary",
value = (total_gy)
)
#| component: valuebox
#| title: "Man"
list(
# icon = "file-medical",
color = "primary",
value = label_percent(accuracy = 1)(males_gy$n/total_gy)
)
#| component: valuebox
#| title: "Woman"
list(
# icon = "calendar-week",
color = "warning",
value = label_percent(accuracy = 0.1)(females_gy$n/total_gy)
)
#| title: Protected Areas
ld_gy |> count(Protected_Area) |>
mutate(prop = n / sum(n) *100) |>
mutate(ypos = cumsum(prop)- 0.5*prop ) |>
ggplot(aes(x="", y=prop, fill=Protected_Area)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void()
#| title: Competence of Skills for Men
ld_m_gy <- ld |> filter(Pais=="Guyana", Genero=="Masculino") |> f.assesment()
scores_Compet_males_gy  <- as.data.frame(ld_m_gy[,c(2,4,6,8,10,12,14,16,18,20,22)])
#make factors =4
for(y in 1:11){
scores_Compet_males_gy[,y] <- factor(scores_Compet_males_gy[,y],
levels=c("1","2", "3", "4"))
}
# change names
names(scores_Compet_males_gy) <- Skills_short
# Build plot
p <- likert(scores_Compet_males_gy)
plot(p,  centered = TRUE, wrap = 50, wrap.grouping = 50, plot.percent.low = FALSE, plot.percent.high = FALSE, panel.arrange = "v")
# ld_col |> filter(Genero=="Masculino") |>
#     count(Relevance_skill_1, Competence_skill_1) |>
#     ggplot(aes(x = n, y = fct_rev(Relevance_skill_1), fill = Competence_skill_1)) +
#     geom_col(position = "fill", color = "white") +
#     scale_fill_manual(
#         values = c("#ae8b2d", "#0e2635", "#873e23", "#abdbe3"),
#         guide = guide_legend(reverse = TRUE)
#     ) +
#     scale_x_continuous(labels = label_percent()) +
#     labs(y = NULL, x = NULL, fill = "Skill competence\nfor my role")
#| title: Competence of Skills for Women
ld_f_gy <- ld |> filter(Pais=="Guyana", Genero=="Femenino") |> f.assesment()
scores_Compet_females_gy  <- as.data.frame(ld_f_gy[,c(2,4,6,8,10,12,14,16,18,20,22)])
#make factors =4
for(y in 1:11){
scores_Compet_females_gy[,y] <- factor(scores_Compet_females_gy[,y],
levels=c("1","2", "3", "4"))
}
# change names
names(scores_Compet_females_gy) <- Skills_short
# Build plot
p <- likert(scores_Compet_females_gy)
plot(p,  centered = TRUE, wrap = 50, wrap.grouping = 50, plot.percent.low = FALSE, plot.percent.high = FALSE, panel.arrange = "v")
# ld_col |> filter(Genero=="Femenino") |>
#     count(Relevance_skill_1, Competence_skill_1) |>
#     ggplot(aes(x = n, y = fct_rev(Relevance_skill_1), fill = Competence_skill_1)) +
#     geom_col(position = "fill", color = "white") +
#     scale_fill_manual(
#         values = c("#ae8b2d", "#0e2635", "#873e23", "#abdbe3"),
#         guide = guide_legend(reverse = TRUE)
#     ) +
#     scale_x_continuous(labels = label_percent()) +
#     labs(y = NULL, x = NULL, fill = "Skill competence\nfor my role")
#| label: Surinam-values
#| results: hide
ld_su <- ld |>
filter(Pais == "Surinam")
n_respondants_su <- nrow(ld_su)
n_Genero_su <- ld_su |>
count(Genero)
males_su <- n_Genero_su[2,2]
females_su <- n_Genero_su[1,2]
total_su <- sum(n_Genero_su$n)
#| component: valuebox
#| title: "Total"
list(
# icon = "file-medical",
color = "primary",
value = (total_su)
)
#| component: valuebox
#| title: "Man"
list(
# icon = "file-medical",
color = "primary",
value = label_percent(accuracy = 1)(males_su$n/total_su)
)
#| component: valuebox
#| title: "Woman"
list(
# icon = "calendar-week",
color = "warning",
value = label_percent(accuracy = 0.1)(females_su$n/total_su)
)
#| title: Protected Areas
ld_su |> count(Protected_Area) |>
mutate(prop = n / sum(n) *100) |>
mutate(ypos = cumsum(prop)- 0.5*prop ) |>
ggplot(aes(x="", y=prop, fill=Protected_Area)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void()
ld_su$Protected_Area
#| title: Competence of Skills for Men
ld_m_su <- ld |> filter(Pais=="Surinam", Genero=="Masculino") |> f.assesment()
scores_Compet_males_su  <- as.data.frame(ld_m_su[,c(2,4,6,8,10,12,14,16,18,20,22)])
#make factors =4
for(y in 1:11){
scores_Compet_males_su[,y] <- factor(scores_Compet_males_su[,y],
levels=c("1","2", "3", "4"))
}
# change names
names(scores_Compet_males_su) <- Skills_short
# Build plot
p <- likert(scores_Compet_males_su)
plot(p,  centered = TRUE, wrap = 50, wrap.grouping = 50, plot.percent.low = FALSE, plot.percent.high = FALSE, panel.arrange = "v")
# ld_col |> filter(Genero=="Masculino") |>
#     count(Relevance_skill_1, Competence_skill_1) |>
#     ggplot(aes(x = n, y = fct_rev(Relevance_skill_1), fill = Competence_skill_1)) +
#     geom_col(position = "fill", color = "white") +
#     scale_fill_manual(
#         values = c("#ae8b2d", "#0e2635", "#873e23", "#abdbe3"),
#         guide = guide_legend(reverse = TRUE)
#     ) +
#     scale_x_continuous(labels = label_percent()) +
#     labs(y = NULL, x = NULL, fill = "Skill competence\nfor my role")
#| title: Competence of Skills for Women
ld_f_su <- ld |> filter(Pais=="Guyana", Genero=="Femenino") |> f.assesment()
scores_Compet_females_su  <- as.data.frame(ld_f_su[,c(2,4,6,8,10,12,14,16,18,20,22)])
#make factors =4
for(y in 1:11){
scores_Compet_females_su[,y] <- factor(scores_Compet_females_su[,y],
levels=c("1","2", "3", "4"))
}
# change names
names(scores_Compet_females_su) <- Skills_short
# Build plot
p <- likert(scores_Compet_females_su)
plot(p,  centered = TRUE, wrap = 50, wrap.grouping = 50, plot.percent.low = FALSE, plot.percent.high = FALSE, panel.arrange = "v")
# ld_col |> filter(Genero=="Femenino") |>
#     count(Relevance_skill_1, Competence_skill_1) |>
#     ggplot(aes(x = n, y = fct_rev(Relevance_skill_1), fill = Competence_skill_1)) +
#     geom_col(position = "fill", color = "white") +
#     scale_fill_manual(
#         values = c("#ae8b2d", "#0e2635", "#873e23", "#abdbe3"),
#         guide = guide_legend(reverse = TRUE)
#     ) +
#     scale_x_continuous(labels = label_percent()) +
#     labs(y = NULL, x = NULL, fill = "Skill competence\nfor my role")
#| title: Competence of Skills for Women
ld_f_su <- ld |> filter(Pais=="Surinam", Genero=="Femenino") |> f.assesment()
scores_Compet_females_su  <- as.data.frame(ld_f_su[,c(2,4,6,8,10,12,14,16,18,20,22)])
#make factors =4
for(y in 1:11){
scores_Compet_females_su[,y] <- factor(scores_Compet_females_su[,y],
levels=c("1","2", "3", "4"))
}
# change names
names(scores_Compet_females_su) <- Skills_short
# Build plot
p <- likert(scores_Compet_females_su)
plot(p,  centered = TRUE, wrap = 50, wrap.grouping = 50, plot.percent.low = FALSE, plot.percent.high = FALSE, panel.arrange = "v")
# ld_col |> filter(Genero=="Femenino") |>
#     count(Relevance_skill_1, Competence_skill_1) |>
#     ggplot(aes(x = n, y = fct_rev(Relevance_skill_1), fill = Competence_skill_1)) +
#     geom_col(position = "fill", color = "white") +
#     scale_fill_manual(
#         values = c("#ae8b2d", "#0e2635", "#873e23", "#abdbe3"),
#         guide = guide_legend(reverse = TRUE)
#     ) +
#     scale_x_continuous(labels = label_percent()) +
#     labs(y = NULL, x = NULL, fill = "Skill competence\nfor my role")
library(readxl)
Ecuador1 <- read_excel("data/Ecuador1.xlsx")
library(dplyr)
library(tidytext)
library(readxl)
library(dplyr)
library(tidytext)
library(tidyverse)
Ecuador1 <- read_excel("data/Ecuador1.xlsx")
ap_td <- tidy(Ecuador1)
class(Ecuador1)
Ecuador1 <- as.matrix(read_excel("data/Ecuador1.xlsx"))
ap_td <- tidy(Ecuador1)
library(tidytext)
tidytext::tidy
??tidytext::tidy
tidy_Ecuador1 <- Ecuador1 %>%
unnest_tokens(output = word, input = text)
Ecuador1 <- as.matrix(read_excel("data/Ecuador1.xlsx"))
Ecuador1 <- read_excel("data/Ecuador1.xlsx")
tidy_Ecuador1 <- Ecuador1 %>%
unnest_tokens(output = word, input = text)
names(Ecuador1)
tidy_Ecuador1 <- Ecuador1 %>%
unnest_tokens(output = word, input = texto)
View(tidy_Ecuador1)
library(tm)
docs <- Corpus(VectorSource(Ecuador1$texto))
# Convertir a letras minÃºsculas el texto.
docs <- tm_map(docs, content_transformer(tolower))
# Remover nÃºmeros
docs <- tm_map(docs, removeNumbers)
# Remover stopwords comunes
docs <- tm_map(docs, removeWords, stopwords(c("spanish")))
View(tidy_Ecuador1)
# Remover nÃºmeros
tidy_Ecuador1 <- tm_map(tidy_Ecuador1, removeNumbers)
View(docs)
docs <- Corpus(VectorSource(Ecuador1$texto))
# Convertir a letras minÃºsculas el texto.
docs <- tm_map(docs, content_transformer(tolower))
# Remover nÃºmeros
docs <- tm_map(docs, removeNumbers)
# Remover stopwords comunes
docs <- tm_map(docs, removeWords, stopwords(c("spanish")))
# docs <- tm_map(docs, removeWords, stopwords(c("english")))
# docs <- tm_map(docs, removeWords, stopwords(c("portuguese")))
# docs <- tm_map(docs, removeWords, stopwords(c("dutch")))
# Remover una palabra en particular.
# Se especifica las stopwords como un vector de caracteres.
docs <- tm_map(docs, removeWords, c("realizar", "actividades", "ambiental" ))
# remover signos de puntuaciÃ³n
docs <- tm_map(docs, removePunctuation)
# Eliminar espacios en blanco extras.
docs <- tm_map(docs, stripWhitespace)
View(docs)
tm_map(tidy_Ecuador1, removeWords, stopwords(c("spanish")))
#crear matriz documento de tÃ©rminos
dtm <- TermDocumentMatrix(docs)
dtm
ap_sentiments <- tidy_Ecuador1 %>%
inner_join(get_sentiments("bing"), join_by(term == word))
dtm
matriz
ap_td <- tidy(dtm)
View(ap_td)
# sentiment
ap_sentiments <- ap_td %>%
inner_join(get_sentiments("bing"), join_by(term == word))
View(ap_sentiments)
get_sentiments("bing")
